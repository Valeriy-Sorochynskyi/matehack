{"version":3,"sources":["utils/constants.js","components/Modal/Modal.js","components/Button/Button.js","components/Month/Month.js","components/Day/Day.js","components/Week/Week.js","components/Content/Content.js","components/Tabs/Tabs.js","components/Pagination/Pagination.js","components/Header/Header.js","App.js","index.js"],"names":["currentTime","Date","daysTitle","getMonth","getFullYear","days","0","1","2","3","4","5","6","months","7","8","9","10","11","12","Modal","onClose","onSave","changeHandler","title","className","role","onClick","type","data-dismiss","aria-label","aria-hidden","action","onSubmit","htmlFor","placeholder","value","onChange","name","Button","btnClass","children","e","Month","state","daysArr","getDaysArr","year","month","startDay","toLocaleString","weekday","initialDate","y","m","dateThisMonth","dateNextMonth","Math","round","getDaysInMonth","initialDateCel","indexOf","currentMonth","Array","keys","clearArr","length","push","reverse","clearDayStart","clearDayEnd","date","this","props","setState","prevProps","PrevState","openModal","todoList","map","day","key","index","dateOfCell","getTime","setDate","String","random","getDate","filter","el","id","React","PureComponent","hours","Day","getDay","hour","Component","arrWeek","arrHours","Week","years","getWeek","param","initial","currentYear","i","currentDate","newDate","first","setName","valueOf","Content","content","Tabs","getContent","Pagination","goNext","goPrev","goToday","Header","App","targetId","isModalOpen","target","event","nextMonth","nextWeek","nextDay","handleModalClose","clickOnDay","createEvent","preventDefault","prevstate","eventDate","v4","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d896ecc9.chunk.js","sourcesContent":["export const currentTime = new Date();\nexport const monthNow = currentTime.getMonth() + 1;\nexport const yearNow = currentTime.getFullYear();\nexport const monthes = [\n  'Январь',\n  'Февраль',\n  'Март',\n  'Апрель',\n  'Май',\n  'Июнь',\n  'Июль',\n  'Август',\n  'Сентябрь',\n  'Октябрь',\n  'Ноябрь',\n  'Декабрь',\n];\nexport const daysTitle = [\n  'Sun',\n  'Mon',\n  'Tue',\n  'Wed',\n  'Thu',\n  'Fri',\n  'Sat',\n];\n\nexport const days = {\n  0: 'Sunday',\n  1: 'Monday',\n  2: 'Tuesday',\n  3: 'Wednesday',\n  4: 'Thursday',\n  5: 'Friday',\n  6: 'Saturday',\n};\n\nexport const months = {\n  1: 'January',\n  2: 'February',\n  3: 'March',\n  4: 'April',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'August',\n  9: 'September',\n  10: 'October',\n  11: 'November',\n  12: 'December',\n};\n\nexport const todos = [\n  {\n    id: 1583445600000,\n    title: 'Сelebration of the end of the hackathon 1',\n    description: 'Duis lobortis massa imperdiet quam. '\n        + 'Praesent ut ligula non mi varius sagittis.',\n  },\n  {\n    id: 1583445600000,\n    title: 'Сelebration of the end of the hackathon 2',\n    description: 'Duis lobortis massa imperdiet quam. '\n        + 'Praesent ut ligula non mi varius sagittis.',\n  },\n  {\n    id: 1583445800000,\n    title: 'Сelebration of the end of the hackathon 3',\n    description: 'Duis lobortis massa imperdiet quam. '\n        + 'Praesent ut ligula non mi varius sagittis.',\n  },\n];\n","import React from 'react';\nimport './Modal.css';\nimport PropTypes from 'prop-types';\n\nexport const Modal = ({ onClose, onSave, changeHandler, title }) => (\n  <div className=\"modal custom__modal\">\n    <div className=\"modal-dialog\" role=\"document\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">Add todo</h5>\n          <button\n            onClick={onClose}\n            type=\"button\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"Close\"\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <form action=\"#\" onSubmit={onSave}>\n            <div className=\"form-group row\">\n              <label\n                htmlFor=\"staticEmail\"\n                className=\"col-sm-2 col-form-label\"\n              >\n                  Title\n              </label>\n              <div className=\"col-sm-10\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Input title\"\n                  value={title}\n                  className=\"form-control\"\n                  onChange={changeHandler}\n                />\n              </div>\n            </div>\n\n            <button\n              name=\"save\"\n              type=\"submit\"\n              onClick={onSave}\n              className=\"btn btn-primary\"\n            >\n                  Save changes\n            </button>\n          </form>\n        </div>\n        <div className=\"modal-footer\">\n\n          <button\n            name=\"close\"\n            onClick={onClose}\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            data-dismiss=\"modal\"\n          >\nClose\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  changeHandler: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nexport const Button = ({ onClick, btnClass, children }) => (\n  <button\n    onClick={e => onClick(e)}\n    className={`table__button ${btnClass}`}\n    type=\"button\"\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  btnClass: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType(\n    [\n      PropTypes.string,\n      PropTypes.shape({}),\n      PropTypes.number],\n  ).isRequired,\n};\n\nButton.propTypes = {\n  btnClass: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType(\n    [\n      PropTypes.any,\n      PropTypes.bool,\n      PropTypes.string,\n      PropTypes.shape({}),\n      PropTypes.number],\n  ).isRequired,\n};\n","import React from 'react';\nimport './Month.css';\nimport 'bootswatch/dist/lux/bootstrap.min.css';\nimport PropTypes from 'prop-types';\nimport { Button } from '../Button/Button';\nimport {\n  months,\n  daysTitle,\n} from '../../utils/constants';\n\nclass Month extends React.PureComponent {\n  state = {\n    daysArr: [],\n  };\n\n  componentDidMount() {\n    const { date } = this.props;\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n\n    this.setState({\n      daysArr: [...this.getDaysArr(year, month)],\n    });\n  }\n\n  componentDidUpdate(prevProps, PrevState) {\n    const { date } = this.props;\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n\n    if (date !== prevProps.date) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        daysArr: [...this.getDaysArr(year, month)],\n      });\n    }\n  }\n\n  getDaysArr = (year, month) => {\n    const getDaysInMonth = (y, m) => {\n      const dateThisMonth = new Date(y, m - 1, 1);\n      const dateNextMonth = m === 12\n        ? new Date(y + 1, 0, 1)\n        : new Date(y, m, 1);\n\n      return Math.round((dateNextMonth - dateThisMonth) / 1000 / 3600 / 24);\n    };\n\n    const startDay = new Date(year, month - 1, 1).toLocaleString('en', {\n      weekday: 'short',\n    });\n\n    const initialDate = getDaysInMonth(year, month);\n    const initialDateCel = initialDate + daysTitle\n      .indexOf(startDay) > 35 ? 42 : 35;\n    const currentMonth = [...Array(initialDate).keys()];\n    const clearDayStart = () => {\n      const clearArr = [];\n\n      while (clearArr.length <= daysTitle.indexOf(startDay) - 1) {\n        clearArr.push('');\n      }\n\n      return clearArr.reverse();\n    };\n\n    const clearDayEnd = () => {\n      let clearArr = [];\n\n      while (clearArr.length <= initialDateCel\n      - daysTitle.indexOf(startDay) - 1\n      - currentMonth.length) {\n        clearArr = [\n          ...clearArr,\n          '',\n        ];\n      }\n\n      return clearArr;\n    };\n\n    const days = [\n      ...clearDayStart(),\n      ...currentMonth,\n      ...clearDayEnd(),\n    ];\n\n    return days;\n  }\n\n  render() {\n    const { daysArr } = this.state;\n    const { date, openModal, todoList } = this.props;\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n\n    return (\n      <>\n        <h2 className=\"title\">\n          {year}\n          {' '}\n          {months[month]}\n        </h2>\n        <table className=\"table\">\n          <thead>\n            <tr className=\"table__scope\">\n              {daysTitle.map(day => (\n                <th key={day}>{day}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"table__scope\">\n              {daysArr.map((day, index) => {\n                const dateOfCell = new Date(this.props.date.getTime());\n\n                dateOfCell.setDate(day + 1);\n\n                return (\n                  <td\n                    className=\"table__cell\"\n                    key={String(Math.random())}\n                  >\n                    {\n                      day === ''\n                        ? ''\n                        : (\n                          <Button\n                            btnClass={\n                              (date.getDate() === day + 1)\n                                && 'day__active'\n                            }\n                            onClick={() => openModal(day)}\n                          >\n                            <span className=\"badge badge-primary badge-pill\">\n                              {day === ''\n                                ? ''\n                                : day + 1 }\n                            </span>\n                            {todoList\n                              .filter(el => el.date.getFullYear()\n                                    === dateOfCell.getFullYear()\n                                    && el.date.getMonth()\n                                    === dateOfCell.getMonth()\n                                    && el.date.getDate()\n                                    === dateOfCell.getDate())\n                              .map(el => (\n                                <span\n                                  key={el.id}\n                                  className=\"badge badge-danger  badge-pill\"\n                                >\n                                  {el.title}\n                                </span>\n                              ))}\n                          </Button>\n                        )\n                    }\n\n                  </td>\n                );\n              })}\n            </tr>\n          </tbody>\n        </table>\n      </>\n    );\n  }\n}\n\nexport default Month;\n\nMonth.propTypes = {\n  openModal: PropTypes.func.isRequired,\n  todoList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  date: PropTypes.shape({\n    getDate: PropTypes.func,\n    getTime: PropTypes.func,\n    openModal: PropTypes.func,\n    getFullYear: PropTypes.func,\n    getMonth: PropTypes.func,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Day.css';\nimport { days } from '../../utils/constants';\nimport { Button } from '../Button/Button';\n\nconst hours = [...Array(24).keys()];\n\nexport class Day extends React.Component {\n  state = {};\n\n  render() {\n    const day = this.props.date.getDay();\n\n    return (\n      <>\n        <h1>{days[day]}</h1>\n        <table className=\"table table-hover day\">\n          <thead>\n            <tr>\n              <th>Hours</th>\n            </tr>\n          </thead>\n          <tbody>\n            {hours.map(hour => (\n              <tr key={`day${hour}`} className=\"table-default\">\n                <td className=\"day__cell day__cell_first-column\">\n                  {hour < 10 ? `0${hour}` : `${hour}`}\n                  :00\n                </td>\n                <td className=\"day__cell day__cell_second-column\">\n                  <Button onClick={() => {\n\n                  }}\n                  />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n}\n\nDay.propTypes = {\n  date: PropTypes.shape({\n    getDay: PropTypes.func,\n  }).isRequired,\n};\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport 'bootswatch/dist/lux/bootstrap.min.css';\nimport { daysTitle, months } from '../../utils/constants';\nimport { Button } from '../Button/Button';\n\nimport './Week.css';\n\nconst arrWeek = [...Array(7).keys()];\nconst arrHours = [...Array(24).keys()];\n\nclass Week extends React.Component {\n    state = {\n      month: [],\n      date: [],\n      years: [],\n    };\n\n    componentDidMount() {\n      this.getWeek(this.props.date);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props !== prevProps) {\n        this.getWeek(this.props.date);\n      }\n    }\n\n    getWeek = (param) => {\n      const month = [];\n      const date = [];\n      const years = [];\n      const initial = new Date(param.getTime());\n      const currentMonth = initial.getMonth();\n      const currentYear = initial.getFullYear();\n\n      for (let i = 0; i <= 6; i += 1) {\n        const currentDate = initial.getDate() + i;\n        const newDate = new Date(currentYear, currentMonth, currentDate);\n\n        const first = newDate.getDate();\n        const day = newDate.getMonth() + 1;\n        const year = newDate.getFullYear();\n\n        month.push(day);\n        date.push(first);\n        years.push(year);\n      }\n\n      this.setState({\n        month: [...month],\n        date: [...date],\n        years: [...years],\n      });\n    }\n\n    setName = (year, month, day, hour) => {\n      if (hour) {\n        return new Date(year, month, (day + 1), hour).valueOf();\n      }\n\n      return new Date(year, month, (day + 1)).valueOf();\n    }\n\n    render() {\n      const { month, date, years } = this.state;\n\n      return (\n        <>\n          <div className=\"date__heading\">\n            {`${date[0]} ${months[month[0]]} ${years[0]} \n            - ${date[6]} ${months[month[6]]} ${years[6]}`}\n          </div>\n          <table className=\"table table-hover\">\n            <thead>\n              <tr className=\"table__row\">\n                <th className=\"table__heading-column\" />\n                {daysTitle.map((day, index) => (\n                  <td key={day} className=\"table__heading-column\">\n                    {day}\n                    <br />\n                    {month[index] < 10\n                      ? `${date[index]}-0${month[index]}`\n                      : `${date[index]}-${month[index]}`}\n                  </td>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {arrHours.map(hour => (\n                <tr key={hour} className=\"table__row\">\n                  <th className=\"table__body-column\">\n                    {hour < 10 ? `0${hour}:00` : `${hour}:00`}\n                  </th>\n                  {arrWeek.map((day, i) => (\n                    <td key={day} className=\"table__column\">\n                      <Button onClick={() => {}} />\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      );\n    }\n}\n\nWeek.propTypes = {\n  date: Proptypes.instanceOf(Date).isRequired,\n};\n\nexport default Week;\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport Month from '../Month/Month';\nimport { Day } from '../Day/Day';\nimport Week from '../Week/Week';\n\nexport class Content extends React.Component {\n  state = {}\n\n  render() {\n    const { content, date, openModal, todoList } = this.props;\n\n    return (\n      <div className=\"container\">\n        {content === 'day' && (\n          <Day\n            date={date}\n            openModal={openModal}\n            todoList={todoList}\n          />\n        )}\n        {content === 'month' && (\n          <Month\n            date={date}\n            openModal={openModal}\n            todoList={todoList}\n          />\n        )}\n        {content === 'week' && (\n          <Week\n            date={date}\n            openModal={openModal}\n            todoList={todoList}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nContent.propTypes = {\n  todoList: Proptypes.arrayOf(Proptypes.object).isRequired,\n  openModal: Proptypes.func.isRequired,\n  content: Proptypes.string.isRequired,\n  date: Proptypes.shape({}).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Tabs extends React.Component {\n  state = {}\n\n  render() {\n    const { getContent } = this.props;\n\n    return (\n      <div>\n        <button\n          onClick={getContent}\n          name=\"month\"\n          type=\"button\"\n          className=\"btn btn-info\"\n        >\n            Month\n        </button>\n        <button\n          onClick={getContent}\n          name=\"week\"\n          type=\"button\"\n          className=\"btn btn-info\"\n        >\n            Week\n        </button>\n        <button\n          onClick={getContent}\n          name=\"day\"\n          type=\"button\"\n          className=\"btn btn-info\"\n        >\n            Day\n        </button>\n      </div>\n    );\n  }\n}\n\nTabs.propTypes = {\n  getContent: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Pagination extends React.Component {\n  state = {};\n\n  render() {\n    const { goNext, goPrev, goToday } = this.props;\n\n    return (\n      <div>\n        <button type=\"button\" onClick={goPrev} className=\"btn btn-info\">\n          Prev\n        </button>\n        <button type=\"button\" onClick={goToday} className=\"btn btn-info\">\n          Today\n        </button>\n        <button type=\"button\" onClick={goNext} className=\"btn btn-info\">\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nPagination.propTypes = {\n  goNext: PropTypes.func.isRequired,\n  goPrev: PropTypes.func.isRequired,\n  goToday: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './Header.css';\nimport PropTypes from 'prop-types';\nimport { Tabs } from '../Tabs/Tabs';\nimport { Pagination } from '../Pagination/Pagination';\n\nexport class Header extends React.Component {\n  state = {};\n\n  render() {\n    const { getContent, goNext, goPrev, goToday } = this.props;\n\n    return (\n      <header className=\"header\">\n        <Pagination goNext={goNext} goPrev={goPrev} goToday={goToday} />\n        <Tabs getContent={getContent} />\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  getContent: PropTypes.func.isRequired,\n  goNext: PropTypes.func.isRequired,\n  goPrev: PropTypes.func.isRequired,\n  goToday: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { v4 } from 'uuid';\nimport './utils/reset.css';\nimport './App.css';\n// eslint-disable-next-line import/no-unresolved\nimport 'bootswatch/dist/lux/bootstrap.min.css';\nimport { currentTime } from './utils/constants';\nimport { Modal } from './components/Modal/Modal';\nimport { Content } from './components/Content/Content';\nimport { Header } from './components/Header/Header';\n\nclass App extends React.Component {\n  state = {\n    content: 'month',\n    currentDate: currentTime,\n    title: '',\n    targetId: '',\n    isModalOpen: false,\n    todoList: [],\n  };\n\n  componentDidMount() {\n    // this.setState({\n    //   todoList: tasks,\n    // });\n  }\n\n  changeHandler = ({ target }) => {\n    this.setState({ title: target.value });\n  }\n\n  getContent = (event) => {\n    const { name } = event.target;\n\n    this.setState({\n      content: name,\n    });\n  }\n\n  goNext = () => {\n    const { currentDate, content } = this.state;\n    const year = currentDate.getFullYear();\n    const date = currentDate.getDate();\n    const month = currentDate.getMonth();\n\n    switch (content) {\n      case 'month': {\n        const nextMonth = new Date(currentDate.getTime()).getMonth() + 1;\n\n        this.setState({\n          currentDate: new Date(year, nextMonth, date),\n        });\n      }\n\n        break;\n\n      case 'week': {\n        const nextWeek = new Date(currentDate.getTime()).getDate() + 7;\n\n        this.setState({\n          currentDate: new Date(year, month, nextWeek),\n        });\n      }\n\n        break;\n\n      case 'day': {\n        const nextDay = new Date(currentDate.getTime()).getDate() + 1;\n\n        this.setState({\n          currentDate: new Date(year, month, nextDay),\n        });\n      }\n\n        break;\n\n      default: break;\n    }\n  }\n\n  goPrev = () => {\n    const { currentDate, content } = this.state;\n    const year = currentDate.getFullYear();\n    const date = currentDate.getDate();\n    const month = currentDate.getMonth();\n\n    switch (content) {\n      case 'month': {\n        const nextMonth = new Date(currentDate.getTime()).getMonth() - 1;\n\n        this.setState({\n          currentDate: new Date(year, nextMonth, date),\n        });\n      }\n\n        break;\n\n      case 'week': {\n        const nextWeek = new Date(currentDate.getTime()).getDate() - 7;\n\n        this.setState({\n          currentDate: new Date(year, month, nextWeek),\n        });\n      }\n\n        break;\n\n      case 'day': {\n        const nextDay = new Date(currentDate.getTime()).getDate() - 1;\n\n        this.setState({\n          currentDate: new Date(year, month, nextDay),\n        });\n      }\n\n        break;\n\n      default: break;\n    }\n  }\n\n  handleModalClose = () => {\n    this.setState({\n      isModalOpen: false,\n    });\n  }\n\n  clickOnDay = (day) => {\n    this.setState({\n      isModalOpen: true,\n      targetId: day,\n    });\n  }\n\n  createEvent = (e) => {\n    e.preventDefault();\n    this.setState((prevstate) => {\n      const { currentDate } = prevstate;\n      const eventDate = new Date(currentDate.getTime());\n\n      eventDate.setDate(+prevstate.targetId + 1);\n\n      return {\n        ...prevstate,\n        todoList: [...prevstate.todoList, {\n          id: v4(),\n          date: eventDate,\n          title: prevstate.title,\n        }],\n        title: '',\n        targetId: null,\n        isModalOpen: false,\n      };\n    });\n  }\n\n  goToday = () => {\n    this.setState({\n      currentDate: new Date(),\n    });\n  }\n\n  render() {\n    const { content, currentDate, isModalOpen, title, todoList } = this.state;\n\n    return (\n      <>\n        {/* {isModalOpen && <Modal title={title} />}\n        <h1>Calendar</h1> */}\n\n        <Header\n          getContent={this.getContent}\n          date={currentDate}\n          goNext={this.goNext}\n          goPrev={this.goPrev}\n          goToday={this.goToday}\n        />\n        <Content\n          content={content}\n          date={currentDate}\n          openModal={this.clickOnDay}\n          todoList={todoList}\n        />\n        {isModalOpen && (\n          <Modal\n            onClose={this.handleModalClose}\n            onSave={this.createEvent}\n            changeHandler={this.changeHandler}\n            title={title}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}